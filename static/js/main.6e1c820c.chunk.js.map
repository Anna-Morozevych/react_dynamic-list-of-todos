{"version":3,"sources":["components/TodoList/TodoList.tsx","components/CurrentUser/CurrentUser.tsx","api/api.ts","App.tsx","index.tsx"],"names":["TodoList","todos","selectUser","useState","inputValue","setInputValue","selectValue","setSelectValue","className","type","value","onChange","event","target","name","result","filter","todo","title","includes","completed","getFilteredTodos","map","classNames","htmlFor","id","toString","readOnly","checked","onClick","userId","CurrentUser","selectedUser","currentUser","setCurrentUser","useEffect","fetch","then","response","json","users","email","phone","App","selectedUserId","setSelectedUserId","todosList","setTodosList","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6e1c820c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport './TodoList.scss';\n\ntype Props = {\n  todos: Todo[],\n  selectUser : (userId: number) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectUser,\n}) => {\n  const [inputValue, setInputValue] = useState('');\n  const [selectValue, setSelectValue] = useState('all');\n\n  const getFilteredTodos = () => {\n    const result = todos.filter(todo => todo.title.includes(inputValue));\n\n    switch (selectValue) {\n      case 'active':\n        return result.filter(todo => todo.completed === false);\n\n      case 'completed':\n        return result.filter(todo => todo.completed === true);\n\n      default:\n        return result;\n    }\n  };\n\n  const handlerInput = (event: React.ChangeEvent<HTMLInputElement>): void => {\n    setInputValue(event.target.value);\n  };\n\n  const handleSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectValue(event.target.value);\n  };\n\n  return (\n    <div className=\"TodoList\">\n      <h2>Todos:</h2>\n\n      <div className=\"TodoList__filter\">\n        <input\n          className=\"TodoList__input\"\n          type=\"text\"\n          value={inputValue}\n          onChange={handlerInput}\n        />\n\n        <select\n          className=\"TodoList__input\"\n          name=\"select\"\n          onChange={handleSelect}\n        >\n          <option value=\"all\">\n            All\n          </option>\n\n          <option value=\"active\">\n            Active\n          </option>\n\n          <option value=\"completed\">\n            Completed\n          </option>\n        </select>\n      </div>\n\n      <div className=\"TodoList__list-container\">\n        <ul className=\"TodoList__list\">\n          {getFilteredTodos().map(todo => (\n            <li\n              className={classNames(\n                'TodoList__item',\n                {\n                  'TodoList__item--unchecked': !todo.completed,\n                  'TodoList__item--checked': todo.completed,\n                },\n              )}\n              key={todo.id}\n            >\n              <label htmlFor={todo.id.toString()}>\n                <input\n                  id={todo.id.toString()}\n                  type=\"checkbox\"\n                  readOnly\n                  checked={todo.completed}\n                />\n                <p>{todo.title}</p>\n              </label>\n\n              <button\n                className=\"\n                  TodoList__user-button\n                  TodoList__user-button--selected\n                  button\n                \"\n                type=\"button\"\n                onClick={() => selectUser(todo.userId)}\n              >\n                {`User ${todo.userId}`}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import React, { useState, useEffect } from 'react';\nimport './CurrentUser.scss';\nimport { getUsers } from '../../api/api';\n\ntype Props = {\n  selectedUser: number,\n};\n\nexport const CurrentUser: React.FC<Props> = ({ selectedUser }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    if (selectedUser) {\n      getUsers(selectedUser)\n        .then(users => setCurrentUser(users));\n    }\n  }, [selectedUser]);\n\n  return (\n    <div className=\"CurrentUser\">\n      <h2 className=\"CurrentUser__title\"><span>{`Selected user: ${selectedUser}`}</span></h2>\n      {selectedUser && (\n        <>\n          <h3 className=\"CurrentUser__name\">{currentUser?.name}</h3>\n          <p className=\"CurrentUser__email\">{currentUser?.email}</p>\n          <p className=\"CurrentUser__phone\">{currentUser?.phone}</p>\n        </>\n      )}\n    </div>\n  );\n};\n","const API_URL_TODOS = 'https://mate.academy/students-api/todos';\nconst API_URL_USERS = 'https://mate.academy/students-api/users';\n\nexport function getTodos(): Promise<Todo[]> {\n  return fetch(API_URL_TODOS)\n    .then(response => response.json());\n}\n\nexport function getUsers(userId: number) {\n  return fetch(`${API_URL_USERS}/${userId}`)\n    .then(response => response.json());\n}\n","import React, { useState, useEffect } from 'react';\nimport './App.scss';\nimport './styles/general.scss';\nimport { TodoList } from './components/TodoList';\nimport { CurrentUser } from './components/CurrentUser';\nimport { getTodos } from './api/api';\n\nconst App: React.FC = () => {\n  const [selectedUserId, setSelectedUserId] = useState(0);\n  const [todosList, setTodosList] = useState<Todo[]>([]);\n\n  useEffect(() => {\n    getTodos()\n      .then(todos => setTodosList(todos));\n  }, []);\n\n  const selectUser = (userId: number): void => {\n    setSelectedUserId(userId);\n  };\n\n  const clearHandler = () => {\n    setSelectedUserId(0);\n  };\n\n  return (\n    <div className=\"App\">\n      <div className=\"App__sidebar\">\n        <TodoList\n          todos={todosList}\n          selectUser={selectUser}\n        />\n      </div>\n\n      <div className=\"App__content\">\n        <div className=\"App__content-container\">\n          {selectedUserId ? (\n            <>\n              <button\n                className=\"button\"\n                type=\"button\"\n                onClick={clearHandler}\n              >\n                Clear\n              </button>\n              <CurrentUser\n                selectedUser={selectedUserId}\n              />\n            </>\n          ) : 'No user selected'}\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}